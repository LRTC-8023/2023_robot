// Base Balancing Code:
/*
 * // kDriveForwardAndBalance is the base code don't play around with it
      case kDriveForwardAndBalance:
      if(time - startTime < 1){
        rollerMotor.set(.7);
       }else{
        rollerMotor.set(0);
       }
      enableIntakeBreak(true);
       double vAngle = gyro.getYComplementaryAngle(); // vAngle stands for virticle angle AKA YComplementartAngle

        // rio is mounted backward
        vAngle = vAngle * -1;

        if (m_starting && vAngle > 5) {
          m_onRamp = true;
          m_ascending = true;
          m_starting = false;
        }

        if (m_ascending && vAngle < 0) {
          m_ascending = false;
          m_onFlat = true;
        }

        if (m_onFlat && Math.abs(vAngle) > 5) {
          m_onFlat = false;
          m_descending = true;
        }

        if (m_descending && Math.abs(vAngle) < 2) {
          m_descending = false;
          m_onRamp = false;
          m_exitingRamp = true;
          m_position = Math.abs(leftPosition);
        }

        if (m_starting || m_ascending) {
          drive.tankDrive(0.55, 0.55);
        }

        if (m_onFlat || m_descending) {
          drive.tankDrive(0.2, 0.2);
        }

        if (m_exitingRamp){
          if (Math.abs(leftPosition) < m_position + 4){
            drive.tankDrive(0.3, 0.3);
          }
          else {
            m_exitingRamp = false;
            m_startBalancing = true;
            //leftEncoder.setPosition(0);
            m_position = leftPosition - 20;
          }
        }
      
        if (m_startBalancing) {
          if (leftPosition > m_position) {
          //if (Math.abs(vAngle) > 10) {
            drive.tankDrive(-0.55, -0.55);
          } else {
            m_startBalancing = false;
            m_balancing = true;
          }
        }

        if (m_balancing) {
          if (vAngle > 2) {
            drive.tankDrive(0.3, 0.3);
          }
          if (vAngle < -2) {
            drive.tankDrive(-0.3, -0.3);
          }
        }
        break;
 */


// GSD auto Balance code 
/*
 * case kgsdDepositAndBalance:
      if(time - startTime < 5){
        rollerMotor.set(.7);
       }else{
        rollerMotor.set(0);
       }
        enableIntakeBreak(true);
        vAngleTest = vAngleTest * -1;

        if (m_starting && vAngleTest > 5) {
          m_onRamp = true;
          m_ascending = true;
          m_starting = false;
        }

        if (m_ascending && vAngleTest < 0) {
          m_ascending = false;
          m_onFlat = true;
        }

        if (m_onFlat && Math.abs(vAngleTest) > 5) {
          m_onFlat = false;
          m_descending = true;
        }

        if (m_descending && Math.abs(vAngleTest) < 1.5) {
          m_descending = false;
          m_onRamp = false;
          m_exitingRamp = true;
          m_position = Math.abs(leftPosition);
        }

        if (m_starting || m_ascending) {
          drive.tankDrive(0.55, 0.55);
        }

        if (m_onFlat || m_descending) {
          drive.tankDrive(0.2, 0.2);
        }

        if (m_exitingRamp){
          if (Math.abs(leftPosition) < m_position + 4){
            drive.tankDrive(0.3, 0.3);
          }
          else {
            m_exitingRamp = false;
            m_startBalancing = true;
            //leftEncoder.setPosition(0);
            m_position = leftPosition - 20;
          }
        }

        if (m_startBalancing) {
          if (leftPosition > m_position) {
          //if (Math.abs(vAngle) > 10) {
            drive.tankDrive(-0.6, -0.6);
          } else {
            m_startBalancing = false;
            m_balancing = true;
          }
        }

        if (m_balancing) {
          if (vAngleTest > 4) {
            drive.tankDrive(0.278, 0.278);
          }
          if (vAngleTest < -4) {
            drive.tankDrive(-0.278, -0.278);
          }
        }

        break;
 */